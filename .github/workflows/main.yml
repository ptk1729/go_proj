name: CI Build and Vulnerability Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.3'

    - name: Build
      run: go build -v ./...

    - name: Run tests
      run: go test -v ./...

  vulnerability-scan:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install osv-scanner
      run: |
        curl -sSfL https://github.com/google/osv-scanner/releases/download/v2.0.2/osv-scanner_linux_amd64 \
          -o osv-scanner
        chmod +x osv-scanner
        sudo mv osv-scanner /usr/local/bin/osv-scanner
    


    - name: Run osv-scanner on Go project
      run: |
        osv-scanner scan --format json . > osv-results.json
        cat osv-results.json

    # - name: Upload scan result artifact
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: osv-scan-report
    #     path: osv-results.json

    - name: Install OPA
      run: |
        curl -L -o opa https://openpolicyagent.org/downloads/latest/opa_linux_amd64
        chmod +x opa
        sudo mv opa /usr/local/bin/

    - name: Evaluate vulnerabilities with OPA
      run: |
        opa eval --format pretty --data .github/policy/ci.rego --input osv-results.json 'data.osv_scan.allow' > opa_result.txt
        cat opa_result.txt

    - name: Check OPA decision
      run: |
        if grep -q 'true' opa_result.txt; then
        echo "OPA RESULT:No critical or high vulnerabilities found. Proceeding."
        else
        echo "Critical or high vulnerabilities detected:"
        opa eval --format pretty --data .github/policy/ci.rego --input osv-results.json 'data.osv_scan.deny'
        exit 1
        fi